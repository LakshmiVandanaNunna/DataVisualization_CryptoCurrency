{"ast":null,"code":"//The date and time of the visualization\nexport const formatDateTime = integerDate => {\n  const [date, time] = new Date(integerDate).toISOString().split('T');\n  const splitDate = date.split('-');\n  return `${splitDate[1]}/${splitDate[2]}/${splitDate[0]} ${time.substring(0, 5)}`;\n};\nexport const formatChartData = chartDataPrices => chartDataPrices.map(price => ({\n  date: formatDateTime(price[0]),\n  price: price[1]\n}));","map":{"version":3,"sources":["/Users/nitin/Documents/GitHub/DL_project/DataVisualization_CryptoCurrency/src/component/CoinChart/CoinChart.utils.ts"],"names":["formatDateTime","integerDate","date","time","Date","toISOString","split","splitDate","substring","formatChartData","chartDataPrices","map","price"],"mappings":"AAEA;AACA,OAAO,MAAMA,cAAc,GAAIC,WAAD,IAAyB;AACrD,QAAM,CAACC,IAAD,EAAOC,IAAP,IAAe,IAAIC,IAAJ,CAASH,WAAT,EAAsBI,WAAtB,GAAoCC,KAApC,CAA0C,GAA1C,CAArB;AACA,QAAMC,SAAS,GAAGL,IAAI,CAACI,KAAL,CAAW,GAAX,CAAlB;AAEA,SAAQ,GAAEC,SAAS,CAAC,CAAD,CAAI,IAAGA,SAAS,CAAC,CAAD,CAAI,IAAGA,SAAS,CAAC,CAAD,CAAI,IAAGJ,IAAI,CAACK,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAqB,EAA/E;AACD,CALM;AAOP,OAAO,MAAMC,eAAe,GAAIC,eAAD,IAA8CA,eAAe,CAACC,GAAhB,CAAqBC,KAAD,KAAY;AAC3GV,EAAAA,IAAI,EAAEF,cAAc,CAACY,KAAK,CAAC,CAAD,CAAN,CADuF;AAE3GA,EAAAA,KAAK,EAAEA,KAAK,CAAC,CAAD;AAF+F,CAAZ,CAApB,CAAtE","sourcesContent":["import { CoinChartData } from '../../interfaces/CoinChartData';\n\n//The date and time of the visualization\nexport const formatDateTime = (integerDate: number) => {\n  const [date, time] = new Date(integerDate).toISOString().split('T');\n  const splitDate = date.split('-');\n\n  return `${splitDate[1]}/${splitDate[2]}/${splitDate[0]} ${time.substring(0, 5)}`;\n};\n\nexport const formatChartData = (chartDataPrices: CoinChartData['prices']) => chartDataPrices.map((price) => ({\n  date: formatDateTime(price[0]),\n  price: price[1],\n}));\n"]},"metadata":{},"sourceType":"module"}