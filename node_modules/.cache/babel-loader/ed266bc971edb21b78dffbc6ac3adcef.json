{"ast":null,"code":"var _jsxFileName = \"/Users/nitin/Documents/GitHub/DL_project/DataVisualization_CryptoCurrency/src/pages/Charts.tsx\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { getCoinList } from '../utils/api';\nimport './ChartStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Charts extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.fetchCoinPage = async data => {\n      try {\n        const coinPage = await getCoinList(1);\n        data = coinPage.map(coin => Math.ceil(coin.current_price));\n        this.drawBarChart(data);\n        this.drawBarChart(data); // this.drawThreeChart(data);\n        // this.drawFourChart(data);\n        // this.drawFiveChart(data);\n      } finally {\n        console.log();\n      }\n    };\n  }\n\n  componentDidMount() {\n    let data;\n    data = [];\n    this.fetchCoinPage(data);\n  }\n\n  drawBarChart(data1) {\n    let data = [data1, data1];\n    console.log(data1);\n    const w = 700;\n    const h = 400;\n    const svg = d3.select('#bar-chart').append(\"svg\").attr(\"width\", w).attr(\"height\", h).style(\"margin-left\", 100);\n    svg.selectAll(\"rect\").data(data).enter().append(\"rect\").attr(\"x\", (d, i) => i * 70).attr(\"y\", (d, i) => h - 10 * d).attr(\"width\", 5).attr(\"height\", (d, i) => d * 10).attr(\"fill\", \"blue\");\n    svg.selectAll(\"text\").data(data).enter().append(\"text\").text(d => d).attr(\"x\", (d, i) => i * 70).attr(\"y\", (d, i) => h - 10 * d - 3);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-item\",\n        id: \"bar-chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-item\",\n        id: \"two-chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-item\",\n        id: \"three-chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-item\",\n        id: \"four-chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-item\",\n        id: \"five-chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Charts;","map":{"version":3,"sources":["/Users/nitin/Documents/GitHub/DL_project/DataVisualization_CryptoCurrency/src/pages/Charts.tsx"],"names":["React","Component","d3","getCoinList","Charts","fetchCoinPage","data","coinPage","map","coin","Math","ceil","current_price","drawBarChart","console","log","componentDidMount","data1","w","h","svg","select","append","attr","style","selectAll","enter","d","i","text","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport {getCoinList} from '../utils/api';\nimport './ChartStyles.css';\n\n\nclass Charts extends Component {\n\n  fetchCoinPage = async (data) => {\n    try {\n      const coinPage = await getCoinList(1);\n      data = coinPage.map((coin: any) => Math.ceil(coin.current_price));\n      this.drawBarChart(data);\n      this.drawBarChart(data);\n      // this.drawThreeChart(data);\n      // this.drawFourChart(data);\n      // this.drawFiveChart(data);\n    } finally {\n      console.log();\n    }\n  };\n\n  componentDidMount() {\n    let data: Array<number>;\n    data = [];\n    this.fetchCoinPage(data);\n  }\n    \n  drawBarChart(data1) {\n    let data = [data1,data1];\n    console.log(data1);\n    const w = 700;\n    const h = 400;\n    \n    const svg = d3.select('#bar-chart')\n    .append(\"svg\")\n    .attr(\"width\", w)\n    .attr(\"height\", h)\n    .style(\"margin-left\", 100);\n                  \n    svg.selectAll(\"rect\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (d, i) => i * 70)\n      .attr(\"y\", (d, i) => h - 10 * d)\n      .attr(\"width\", 5)\n      .attr(\"height\", (d, i) => d * 10)\n      .attr(\"fill\", \"blue\");\n\n    svg.selectAll(\"text\")\n  .data(data)\n  .enter()\n  .append(\"text\")\n  .text((d) => d)\n  .attr(\"x\", (d, i) => i * 70)\n  .attr(\"y\", (d, i) => h - (10 * d) - 3);\n\n\n  }\n        \n  render() {\n    return <div className=\"chart-container\">\n      <div className=\"container-item\" id=\"bar-chart\"></div>\n      <div className=\"container-item\" id=\"two-chart\"></div>\n      <div className=\"container-item\" id=\"three-chart\"></div>\n      <div className=\"container-item\" id=\"four-chart\"></div>\n      <div className=\"container-item\" id=\"five-chart\"></div>\n    </div>\n\n  }\n}\n    \nexport default Charts;"]},"metadata":{},"sourceType":"module"}